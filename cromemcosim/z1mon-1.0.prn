1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 1
      


                   ;
                   ;       CROMEMCO Z-1 MONITOR SOURCE
                   ;
                   ;       RETYPED FROM MANUAL AND MODIFIED TO ASSEMBLE WITH INTEL MACRO-80
                   ;       DECEMBER 2014, UDO MUNK
                   ;
                   ;PPAGE   EQU     0E1H            ;MUST BE THE HIGHER OF A PAIR OF NON-RAM PAGES.
   00FF            PPAGE   EQU     0FFH            ;PROM CAN'T BE DETECTED YET!
                   ;PSW    EQU     6               ;DEFINED BY INTEL ASSEMBLER ALREADY
                   ;SP     EQU     6
   0080            PF      EQU     80H             ;PRIME-ABLE REG FLAG
   0040            R2F     EQU     40H             ;2-BYTE REG FLAG
   0007            BELL    EQU     07
   001B            ESC     EQU     1BH
   000D            CR      EQU     0DH
   000A            LF      EQU     0AH
   0000            STAT    EQU     0
   0040            DAV     EQU     40H
   0080            TBE     EQU     80H
   0001            DATA    EQU     1
   0016            TEMPS   EQU     16H             ;ROOM FOR TEMP STORAGE
   0030            RSTLC   EQU     30H             ;RST LOCATION
   0020            CASE    EQU     20H             ;DIFF BETW LOWER & UPPER CA
                   ;
                   ; Z80 OP-CODES
   0018            JR      EQU     18H
   0038            JRC     EQU     38H
   0030            JRNC    EQU     30H
   0028            JRZ     EQU     28H
   0020            JRNZ    EQU     20H
   0010            DJNZ    EQU     10H
   0008            EXAF    EQU     08              ;EX AF,AF'
   00D9            EXX     EQU     0D9H
   00ED            RLD     EQU     0EDH
   006F            RLD1    EQU     6FH
   00ED            CPI0    EQU     0EDH
   00A1            CPI1    EQU     0A1H
   00ED            CPIR    EQU     0EDH
   00B1            CPIR1   EQU     0B1H
   00ED            LDI     EQU     0EDH
   00A0            LDI1    EQU     0A0H
   00ED            LDIR    EQU     0EDH
   00B0            LDIR1   EQU     0B0H
   00ED            LDD     EQU     0EDH
   00A8            LDD1    EQU     0A8H
   00ED            LDDR    EQU     0EDH
   00B8            LDDR1   EQU     0B8H
   00CB            SET5A   EQU     0CBH
   00EF            ST5A1   EQU     0EFH
                   ;
   00DD            IX      EQU     0DDH
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 2
      


   00FD            IY      EQU     0FDH
                   ;
                   ; DISPLACEMENTS FROM IX OF HI BYTE OF REG PAIRS
   0000            DUPC    EQU     0
   FFFE            DUSP    EQU     -2
   FFFC            DUAF    EQU     -4
   FFFA            DUBC    EQU     -6
   FFF8            DUDE    EQU     -8
   FFF6            DUHL    EQU     -10
   FFF4            DUIT    EQU     -12             ;USER I & INTERRUPT ENABLE
   FFF2            DUIX    EQU     -14
   FFF0            DUIY    EQU     -16
   FFEE            DUAF2   EQU     -18
   FFEC            DUBC2   EQU     -20
   FFEA            DUDE2   EQU     -22
   FFE8            DUHL2   EQU     -24
                    
   E000                    ORG     0E000H
   E000            START:
                   ;
                   ; ENTER MONITOR FROM RESET
                   ;
   E000   3E01             MVI     A,1
   E002   D340             OUT     40H             ;SELECT BANK 0
                   ;
                   ; PLACE SYS STACK AT HIGHEST PAGE OF AVAILABLE RAM.
                   ; ALLOW ROOM FOR TEMP STORAGE.
                   ;
   E004   21EB00           LXI     H,00FFH-TEMPS+2
   E007   25       INIT:   DCR     H
   E008   7E               MOV     A,M
   E009   34               INR     M
   E00A   BE               CMP     M               ;DID IT CHANGE?
   E00B   28               DB      JRZ
   E00C   FA               DB      INIT-$-1
   E00D   35               DCR     M               ;YES. RESTORE IT.
                   ;
                   ; HL NOW POINTS TO BP STACK END
                   ;
   E00E   3600             MVI     M,0             ;BP STACK END MARK
   E010   7D               MOV     A,L             ;SAVE
   E011   2B               DCX     H               ;STORAGE FOR BPSP,LO
   E012   77               MOV     M,A             ;STORE BPSP,LO
   E013   11E6FF           LXI     D,DUHL2-2
   E016   19               DAD     D               ;TO END OF REG STORAGE
   E017   F9               SPHL                    ;SYS SP
                   ;
   E018   ED               DB      0EDH            ;SBC HL,DE: BACK TO UPC;HI
   E019   52               DB      52H             ;(CY WAS SET BY 'DAD D')
   E01A   E5               PUSH    H
   E01B   DD               DB      IX
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 3
      


   E01C   E1               POP     H               ;POP IX: STORAGE PNTR
                   ;
   E01D   16FF             MVI     D,PPAGE         ;FORCE USER SP TO
   E01F   2B               DCX     H
   E020   2B               DCX     H
   E021   72               MOV     M,D             ;POINT TO PROM
                   ;
                   ; SET BAUD RATE
                   ;
   E022   3ED8     INIT1:  MVI     A,0D8H          ;300 BAUD
   E024   CD36E0           CALL    BAUD
   E027   3EF4             MVI     A,0F4H          ;110 BAUD
   E029   C436E0           CNZ     BAUD
   E02C   20               DB      JRNZ
   E02D   F4               DB      INIT1-$-1
                   ;
   E02E   2194E3           LXI     H,HEAD          ;HEADING
   E031   CD0CE2           CALL    PMSG
                   ;
   E034   18               DB      JR
   E035   66               DB      CMND-$-1
                   ;
   E036   D300     BAUD:   OUT     STAT            ;SET BAUD RATE
   E038   CD41E1           CALL    GBYTE
   E03B   CD41E1           CALL    GBYTE           ;CAN WE
   E03E   E67F             ANI     7FH             ;READ
   E040   FE0D             CPI     CR              ;A CR?
   E042   C9               RET
                   ;
                   ; ENTER MONITOR FROM BRKPT
                   ;
                   ; SAVE MACHINE STATE. SAVES ALL REGS INCLUDING
                   ; SP, FINDS THE TOP OF RAM INSTALLED IN MACHINE
                   ; & SWITCHES THE STACK THERE.
                   ;
   E043   E3       SVMS:   XTHL                    ;ADJUST BRKPT RET ADDR
   E044   2B               DCX     H
   E045   E3               XTHL
                   ;
   E046   E5               PUSH    H               ;SAVE
   E047   210400           LXI     H,4
   E04A   39               DAD     SP              ;USP (USER-SP)
   E04B   E3               XTHL                    ;TO STACK
                   ;
   E04C   F5               PUSH    PSW             ;UAF
   E04D   C5               PUSH    B               ;UBC
   E04E   D5               PUSH    D               ;UDE
   E04F   E5               PUSH    H               ;UHL
                   ;
                   ; FIND SYS STACK AGAIN
                   ;
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 4
      


   E050   21E900           LXI     H,00FFH-TEMPS
   E053   25       SVMS1:  DCR     H               ;DECRM MEM PAGE
   E054   7E               MOV     A,M
   E055   34               INR     M
   E056   BE               CMP     M               ;DID IT CHANGE?
   E057   28               DB      JRZ
   E058   FA               DB      SVMS1-$-1
   E059   35               DCR     M               ;YES. RESTORE IT.
                   ;
   E05A   EB               XCHG
   E05B   210B00           LXI     H,11
   E05E   39               DAD     SP              ;PNTS TO BPRA, HI BYTE
   E05F   010C00           LXI     B,12
   E062   ED               DB      LDDR            ;TRANSFER TO SYS STACK
   E063   B8               DB      LDDR1
   E064   13               INX     D               ;DE HAS CURRENT VALUE OF SYS SP AND POINTS TO UR
   E065   23               INX     H               ;HL HAS CURRENT VALUE OF USER SP AND ALSO POINTS
                                                   ;TO UR
   E066   EB               XCHG
   E067   F9               SPHL                    ;SYS SP
                   ;
   E068   ED               DB      0EDH            ;LD A,I
   E069   57               DB      57H
   E06A   0E00             MVI     C,0
   E06C   E270E0           JPO     SVMS3           ;IFF?
   E06F   0C               INR     C               ;C NOW HOLDS USER-IFF
   E070   47       SVMS3:  MOV     B,A
   E071   C5               PUSH    B               ;UIF (USER-I & USER-IFF)
                   ;
   E072   DD               DB      IX
   E073   E5               PUSH    H               ;PUSH IX: UIX
   E074   FD               DB      IY
   E075   E5               PUSH    H               ;PUSH IY: UIY
   E076   010B00           LXI     B,DUPC-DUHL+1
   E079   09               DAD     B               ;PNTS TO UPC, HI BYTE
   E07A   E5               PUSH    H
   E07B   DD               DB      IX
   E07C   E1               POP     H               ;TO IX (POINTS TO UPC)
                   ;
   E07D   08               DB      EXAF
   E07E   F5               PUSH    PSW
   E07F   D9               DB      EXX
   E080   C5               PUSH    B               ;UBC2
   E081   D5               PUSH    D               ;UDE2
   E082   E5               PUSH    H               ;UHL2
                   ;
   E083   DD               DB      IX
   E084   E5               PUSH    H               ;PUSH IX
   E085   E1               POP     H
   E086   23               INX     H               ;POINTS TO BPSP,LO
   E087   6E               MOV     L,M             ;BPSP NOW IN HL
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 5
      


                   ;
                   ; CLEAR ALL BRKPTS
                   ;
   E088   7E       CLBP1:  MOV     A,M             ;BP STK EMPTY?
   E089   B7               ORA     A
   E08A   28               DB      JRZ
   E08B   0A               DB      CLBP2-$-1
                   ;
   E08C   2B               DCX     H
   E08D   56               MOV     D,M
   E08E   2B               DCX     H
   E08F   5E               MOV     E,M
   E090   2B               DCX     H
   E091   7E               MOV     A,M
   E092   12               STAX    D               ;RESTORE CONTENTS TO MEM
   E093   2B               DCX     H
   E094   18               DB      JR
   E095   F2               DB      CLBP1-$-1
                   ;
   E096   7D       CLBP2:  MOV     A,L
   E097   2B               DCX     H
   E098   77               MOV     M,A             ;ADJUST BPSP
                   ;
   E099   CDF5E0           CALL    DSPR            ;DISPLAY USER REGISTERS
                   ;
                   ; GET 1-BYTE COMMAND.
                   ; RETURNS VALUE IN HL & JUMPS TO THAT ADDR.
                   ;
   E09C   CD0CE1   CMND:   CALL    CRLF
   E09F   21B3E3   CMND1:  LXI     H,PRMPT
   E0A2   CD0CE2           CALL    PMSG
                   ; HL NOW PNTS TO TBL ADDR
   E0A5   CD1AE2           CALL    GCMND           ;DE GETS LETTER - 'A'
   E0A8   EB               XCHG
   E0A9   29               DAD     H               ;TIMES 2
   E0AA   19               DAD     D               ; + TBL ADDR
   E0AB   5E               MOV     E,M
   E0AC   23               INX     H
   E0AD   56               MOV     D,M
   E0AE   EB               XCHG
   E0AF   119FE0           LXI     D,CMND1         ;SET UP RETURN
   E0B2   D5               PUSH    D               ;TO CMND
   E0B3   79               MOV     A,C             ;A & C HAVE CMND DELIMITER
   E0B4   E9               PCHL
                   ;
                   ; REJECTS ALL BUT ALPHABETIC CHARACTERS.
                   ; RETURNS THE CHAR LESS THE ASCII VALUE OF 'A'.
                   ;
   E0B5   D661     ABCYZ:  SUI     'A'+CASE        ;'A' OR ABOVE?
   E0B7   38               DB      JRC
   E0B8   03               DB      ERROR-$-1
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 6
      


   E0B9   FE19             CPI     25D             ;'Y' OR BELOW?
   E0BB   D8               RC                      ;IF NOT, CONTINUE BELOW
                   ;
                   ; ERROR & ESCAPE. RETURNS TO CMND WITH SP
                   ; POINTING TO SAVED-REG AREA (UHL2).
                   ;
   E0BC   CD09E2   ERROR:  CALL    PSQS            ;PRINT '? <BELL>'
   E0BF   DD       ESCPE:  DB      IX
   E0C0   E5               PUSH    H               ;PUSH IX
   E0C1   E1               POP     H
   E0C2   11E7FF           LXI     D,DUHL2-1-DUPC
   E0C5   19               DAD     D
   E0C6   F9               SPHL
   E0C7   18               DB      JR
   E0C8   D3               DB      CMND-$-1        ;GET NEW CMND
                   ;
                   ; PROGRAM PROMS. ABORTS IF DESTINATION
                   ; IS NOT ON A 1K (400H) BOUNDARY, SWATH
                   ; WIDTH IS NOT A MULTIPLE OF 1K.
                   ;
   E0C9   06B5     PROG:   MVI     B,181           ;360 ITERATION
   E0CB   C5       PROG1:  PUSH    B               ;SAVE # OF ITERATIONS
   E0CC   CD70E1           CALL    LD2N            ;SOURCE TO DE,INCRM TO BC,
   E0CF   F5               PUSH    PSW             ;SAVE LATEST DELIMITER
   E0D0   78               MOV     A,B             ;IS INCRM A MULT OF 1024?
   E0D1   E603             ANI     3
   E0D3   B1               ORA     C
   E0D4   20               DB      JRNZ
   E0D5   E6               DB      ERROR-$-1
   E0D6   F1               POP     PSW             ;LAST DELIMITER
   E0D7   CD8EE1           CALL    LINCR           ;SOURCE TO HL, DEST TO DE
   E0DA   7A               MOV     A,D             ;IS DEST A MULT OF 1024?
   E0DB   E603             ANI     3
   E0DD   B3               ORA     E
   E0DE   20               DB      JRNZ
   E0DF   DC               DB      ERROR-$-1
                   ;
   E0E0   F1       PROG3:  POP     PSW             ;ITERATION
   E0E1   F5               PUSH    PSW
   E0E2   C5               PUSH    B               ;INCREMENT
   E0E3   010004           LXI     B,1024
   E0E6   C5               PUSH    B               ;SAVE
   E0E7   CD50E2           CALL    MVE             ;MOVE IT
   E0EA   C1               POP     B               ;RETRIEVE
   E0EB   E3               XTHL                    ;INCRM TO HL
   E0EC   B7               ORA     A               ;RESET CY
   E0ED   ED               DB      0EDH            ;SBC HL,BC
   E0EE   42               DB      42H
   E0EF   E3               XTHL                    ;SOURCE BACK TO HL
   E0F0   C1               POP     B               ;NEW INCRM
   E0F1   20               DB      JRNZ
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 7
      


   E0F2   ED               DB      PROG3-$-1       ;LOOP IF INCRM NOT 0
   E0F3   F1               POP     PSW             ;CLEAN UP
   E0F4   C9               RET                     ;BACK TO CMND
                   ;
                   ; COMMAND
                   ;
                   ; DISPLAY THE USER REGISTERS.
                   ;
   E0F5   CD0CE1   DSPR:   CALL    CRLF
   E0F8   DD               DB      IX
   E0F9   E5               PUSH    H               ;PUSH IX
   E0FA   E1               POP     H               ;POINTS TO UPC
   E0FB   0602             MVI     B,2             ;UPC & USP
   E0FD   CD07E1           CALL    PREGS
   E100   0607             MVI     B,7             ;UAF THRU UIY
   E102   CD07E1           CALL    PREGS
   E105   0604             MVI     B,4             ;UAF2 THRU UHL2
   E107   CD4AE1   PREGS:  CALL    P2BMS           ;PRINT 2 BYTES PNTED TO B
   E10A   10               DB      DJNZ
   E10B   FB               DB      PREGS-$-1
                   ; (CONTINUE BELOW)
                   ;
                   ; PRINT CR & LF. PRESERVES ALL REGS BUT A.
                   ;
   E10C   3E0D     CRLF:   MVI     A,CR
                   ; (CONTINUE BELOW)
                   ;
                   ; PRINT THE CHARACTER IN THE A-REGISTER. (CHECKS
                   ; INPUT FOR ESCAPE.) PRESERVES ALL REGS.
   E10E   F5       PCHR:   PUSH    PSW             ;SAVE THE CHAR
   E10F   DB00             IN      STAT
   E111   E640             ANI     DAV
   E113   28               DB      JRZ
   E114   08               DB      PCHR2-$-1
   E115   DB01             IN      DATA
   E117   E67F             ANI     7FH
                   ;
   E119   FE1B     PCHR1:  CPI     ESC
   E11B   28               DB      JRZ
   E11C   A2               DB      ESCPE-$-1
                   ;
   E11D   DB00     PCHR2:  IN      STAT
   E11F   E680             ANI     TBE
   E121   28               DB      JRZ
   E122   FA               DB      PCHR2-$-1
   E123   F1               POP     PSW
   E124   D301             OUT     DATA
   E126   F5               PUSH    PSW
   E127   E5               PUSH    H
   E128   21B0E3           LXI     H,LFNN
   E12B   FE0D             CPI     CR
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 8
      


   E12D   CC0CE2           CZ      PMSG
   E130   E1               POP     H
   E131   F1               POP     PSW
   E132   C9               RET
                   ;
                   ; GET CHARATER. RETURNS IT IN A. CONVERTS
                   ; ALPHA CHARS TO LOWER-CASE. ALTERS F.
                   ;
   E133   CD41E1   GCHR:   CALL    GBYTE
   E136   E67F             ANI     7FH
   E138   FE41             CPI     'A'
   E13A   38               DB      JRC
   E13B   02               DB      GCHR1-$-1
   E13C   F620             ORI     20H             ;CONVERT TO LOWER-CASE
   E13E   F5       GCHR1:  PUSH    PSW             ;SAVE THE CHAR
   E13F   18               DB      JR
   E140   D8               DB      PCHR1-$-1       ;PRINT IT
                   ;
   E141   DB00     GBYTE:  IN      STAT
   E143   E640             ANI     DAV
   E145   28               DB      JRZ
   E146   FA               DB      GBYTE-$-1
   E147   DB01             IN      DATA
   E149   C9               RET
                   ;
                   ; PRINT 2 BYTES IN (HL) & (HL - 1).
                   ; DECREMENTS HL BY 2. ALTERS A. PRESERVES OTHERS
                   ;
   E14A   CDE5E1   P2BMS:  CALL    PNM
   E14D   2B               DCX     H
   E14E   CDE5E1           CALL    PNM
   E151   2B               DCX     H
                   ;
                   ; PRINTS SPACE. PRESERVES ALL REGS BUT A.
                   ;
   E152   3E20     SPACE:  MVI     A,20H
   E154   18               DB      JR
   E155   B8               DB      PCHR-$-1
                   ;
                   ; IF HL IS A MULTIPLE OF 16, DO PADDR.
                   ;
   E156   3E0F     CK16B:  MVI     A,15
                   ;
                   ; ENTER WITH A CONTAINING N. IF HL IS A MULTIPLE
                   ; OF N+1, DO PADDR.
                   ;
   E158   A5       CKBND:  ANA     L
   E159   C0               RNZ
                   ;
                   ; PRINT THE NUMBER IN HL, FOLLOWED BY A COLON.
                   ; PRESERVES ALL REGS EXCEPT A.
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 9
      


                   ;
   E15A   CD0CE1   PADDR:  CALL    CRLF
   E15D   CDDAE1   PADR1:  CALL    PNHL
   E160   3E3A             MVI     A,':'
   E162   18               DB      JR
   E163   AA               DB      PCHR-$-1
                   ;
                   ; LOAD TWO NUMBERS. FOLLOW WITH A CRLF.
                   ;
   E164   CD70E1   L2NCR:  CALL    LD2N
                   ;
                   ; SKIP INITIAL SPACES.
                   ; IF DELIMITER NOT A CR, ERROR
                   ;
   E167   CDD1E1   SKSGC:  CALL    SKSG            ;LOOK FOR A NON-SPACE
   E16A   FE0D             CPI     CR              ;CR?
   E16C   C2BCE0           JNZ     ERROR
   E16F   C9               RET
                   ;
                   ; LOAD TWO NUMBERS. LOADS DE WITH THE BEGINNING
                   ; ADDR, N1. LOADS BC & HL WITH THE INCREMENT
                   ; N2-N1+1 (OR WITH N2 IF THE OPR IS 'S').
                   ; RETURN WITH LAST DELIMITER IN A.
                   ;
   E170   CD97E1   LD2N:   CALL    GNHL            ;N1 TO HL, DELIMITER TO A
   E173   EB               XCHG                    ;SAVE N1 IN DE
   E174   CDD1E1           CALL    SKSG            ;GET NEXT NON-SPACE CHAR
   E177   FE73             CPI     'S'+CASE        ;SWATH?
   E179   20               DB      JRNZ
   E17A   06               DB      LD2N1-$-1
                   ;
   E17B   AF               XRA     A               ;YES
   E17C   CD97E1           CALL    GNHL            ;INCREMENT TO HL
   E17F   18               DB      JR
   E180   07               DB      LD2N2-$-1
                   ;
   E181   CD97E1   LD2N1:  CALL    GNHL            ;INCREMENT
   E184   B7               ORA     A               ;CLEAR CY
   E185   ED               DB      0EDH            ;SBC HL,DE
   E186   52               DB      52H             ;N2-N1
   E187   23               INX     H               ;INCLUDE END POINT
   E188   44       LD2N2:  MOV     B,H
   E189   4D               MOV     C,L             ;BC GETS THE INCRM
   E18A   C9               RET
                   ;
                   ; LOAD 3 OPERANDS. HL GETS SOURCE, DE THE
                   ; 3RD OPERAND, BC THE INCREMENT & A THE
                   ; LOW BYTE OF THE 3RD OPERAND.
                   ;
   E18B   CD70E1   LD3N:   CALL    LD2N
                   ; (CONTINUE BELOW)
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 10
      


                   ;
                   ; TRANSFER DE TO HL. ENTER WITH SPACE OR
                   ; 1ST DIGIT OF NUMBER IN A. GET NUMBER
                   ; INTO DE WITH LOW BYTE ALSO TO A.
                   ; FINISHES WITH A CRLF.
                   ;
   E18E   CD97E1   LINCR:  CALL    GNHL            ;SKIP SPACES, LOAD HL
   E191   CD67E1           CALL    SKSGC           ;WAIT FOR A CR
   E194   7D               MOV     A,L
   E195   EB               XCHG
   E196   C9               RET
                   ;
                   ; CLEARS HL. IF ENTERED WITH HEX CHAR IN A,
                   ; SHIFTS IT INTO HL. O/W, IGNORES LEADING
                   ; SPACES. FIRST CAHR MUST BE HEX. CONTINUES
                   ; SHIFT UNTIL A NON-HEX CHAR RECEIVED & THEN
                   ; RETURNS WITH THE LETTER IN A.
                   ; PRESERVES B,C,D,E.
                   ;
   E197   C5       GNHL:   PUSH    B               ;SAVE
   E198   210000   GNHL1:  LXI     H,0             ;CLEAR BUFFER
                   ; STRIP LEADING SPACES & GET CHAR
   E19B   CDD1E1           CALL    SKSG
                   ; FIRST CHAR MUST BE HEX
   E19E   CDAFE1           CALL    HEXSH           ;IF HEX, SHIFT INTO HL
   E1A1   DABCE0           JC      ERROR           ;O/W,RETRY
   E1A4   CD33E1   GNHL3:  CALL    GCHR
   E1A7   CDAFE1   GNHL5:  CALL    HEXSH           ;IF HEX SHIFT INTO HL
   E1AA   78               MOV     A,B             ;RESTORE CHAR
   E1AB   30               DB      JRNC
   E1AC   F7               DB      GNHL3-$-1       ;IF HEX, CONTINUE
   E1AD   C1               POP     B               ;IF NON-HEX, DONE
   E1AE   C9               RET
                   ;
                   ; IF A CONTAINS HEX CHAR, SHIFTS BINARY EQUIVALE
                   ; INTO HL. IF NOT HEX, RET WITH CY SET. SAVES
                   ; ORIGINAL CHAR IN B
                   ;
   E1AF   47       HEXSH:  MOV     B,A
   E1B0   D630             SUI     '0'             ;< '0'?
   E1B2   D8               RC
   E1B3   C6C9             ADI     '0'-'G'-CASE
   E1B5   D8               RC
   E1B6   D6FA             SUI     'A'-'G'
   E1B8   30               DB      JRNC            ;OK IF >= 'A'
   E1B9   03               DB      HXSH0-$-1
   E1BA   C627             ADI     'A'-'9'-1+CASE
   E1BC   D8               RC
   E1BD   C60A     HXSH0:  DW      0AC6H           ;ADI '9'+1-'0'
                   ; THE A-REG NOW CONTAINS THE HEX DIGIT IN BINARY
                   ; (THE HIGH-ORDER NIBBLE OF A IS 0.)
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 11
      


   E1BF   CDC8E1   HXSH4:  CALL    HXSH1           ;SHIFT 4 BITS INTO HL
   E1C2   CDC8E1           CALL    HXSH1
   E1C5   CDC8E1           CALL    HXSH1
                   ;
   E1C8   07       HXSH1:  RLC                     ;SHIFT INTO BIT 4
   E1C9   29               DAD     H               ;SHIFT LEFT
                   ; CLEAR CY IN CASE OF RET FROM HEXSH
   E1CA   B7               ORA     A
   E1CB   CB               DB      0CBH            ;BIT 4,A
   E1CC   67               DB      67H             ;IS IT 0?
   E1CD   C8               RZ
   E1CE   23               INX     H
   E1CF   C9               RET
                   ;
                   ; RETURNS WITH A NON-SPACE IN THE A-REG.
                   ; IF ENTERED WITH A-REG CONTAINING A NULL
                   ; OR A SPACE, GETS NEW CHARS UNTIL FIRST
                   ; NON-SPACE OCCURS. ALTERS AF.
                   ;
   E1D0   AF       SKSG0:  XRA     A               ;START WITH A NULL
                   ;
   E1D1   B7       SKSG:   ORA     A               ;DOES A CONTAIN NULL?
   E1D2   CC33E1   SKSG1:  CZ      GCHR
   E1D5   FE20             CPI     20H             ;SPACE?
   E1D7   28               DB      JRZ
   E1D8   F9               DB      SKSG1-$-1
   E1D9   C9               RET
                   ;
                   ; PRINT THE NUMBER IN HL. PRESERVES ALL REGS.
                   ;
   E1DA   F5       PNHL:   PUSH    PSW
   E1DB   E5               PUSH    H               ;TO STACK
   E1DC   CDEBE1           CALL    P4HEX
   E1DF   E1               POP     H
   E1E0   F1               POP     PSW
   E1E1   C9               RET
                   ;
                   ; PRINT SPACE FOLLOWED BY THE NUMBER POINTED
                   ; TO BY HL. ALTERS A ONLY.
                   ;
   E1E2   CD52E1   PSNM:   CALL    SPACE
                   ; (CONTINUE BELOW)
                   ;
                   ; PRINTS THE NUMBER POINTED TO BY HL.
                   ; PRESERVES ALL REGISTERS.
                   ;
   E1E5   F5       PNM:    PUSH    PSW
   E1E6   CDF3E1           CALL    P2HEX
   E1E9   F1               POP     PSW
   E1EA   C9               RET
                   ;
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 12
      


                   ; PRINTS 4 HEX CHARS FROM TOP OF STACK.
                   ; ALTERS F,H,L.
                   ;
   E1EB   210300   P4HEX:  LXI     H,3
   E1EE   39               DAD     SP              ;HL = SP
   E1EF   CDF3E1           CALL    P2HEX           ;HIGH BYTE
   E1F2   2B               DCX     H               ;LOW BYTE
                   ;
                   ; PRINT THE NUMBER POINTED TO BY HL.
                   ; PRESERVES ALL REGS EXCEPT AF.
   E1F3   7E       P2HEX:  MOV     A,M             ;GET THE NUMBER
   E1F4   0F               RRC
   E1F5   0F               RRC
   E1F6   0F               RRC
   E1F7   0F               RRC
   E1F8   CDFCE1           CALL    P1HEX           ;LEFT NIBBLE
   E1FB   7E               MOV     A,M             ;NOW DO THE RIGHT NIBBLE
   E1FC   E60F     P1HEX:  ANI     0FH             ;MASK
   E1FE   FE0A             CPI     10              ;<= 9?
   E200   38               DB      JRC
   E201   02               DB      P1HX1-$-1
   E202   C607             ADI     7               ;A THRU F
   E204   C630     P1HX1:  ADI     30H             ;ASCII BIAS
   E206   C30EE1           JMP     PCHR            ;PRINT IT
                   ;
                   ; PRINT MESSAGE. ENTER WITH ADDR OF MSG
                   ; IN HL. MSG IS TERMINATED BY 00 THRU 07.
                   ; PRESERVES FLAGS, CLEARS A, INCRM HL.
                   ;
                   ; PRINT '? <BELL>'
                   ;
   E209   21ADE3   PSQS:   LXI     H,SQS
                   ;
   E20C   3E00     PMSG:   MVI     A,0             ;CLEAR A (FOR GNHL)
   E20E   F5               PUSH    PSW             ;SAVE FLAGS
   E20F   7E       PMSG1:  MOV     A,M
   E210   23               INX     H
   E211   CD0EE1           CALL    PCHR
   E214   E6F8             ANI     0F8H            ;<NULL> THRU <BELL>?
   E216   20               DB      JRNZ
   E217   F7               DB      PMSG1-$-1
   E218   F1               POP     PSW
   E219   C9               RET
                   ;
                   ; DE GETS THE FIRST ALPHA CHAR - 'A'.
                   ; C GETS THE FIRST DELIMITER.
                   ; B IS INITIALIZED TO '0' & RETURNS
                   ; THE LAST CMND CHARACTER.
                   ;
   E21A   CDD0E1   GCMND:  CALL    SKSG0           ;GET NON-SPACE
   E21D   CDB5E0           CALL    ABCYZ           ;ALPHA CHECK
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 13
      


   E220   5F               MOV     E,A
   E221   1600             MVI     D,0             ;DE HAS TBL DISPLACEMENT
   E223   066F             MVI     B,'O'+CASE      ;INITIALIZE FOR GO CMND
   E225   CD33E1   GCMN1:  CALL    GCHR            ;GET CHAR
   E228   FE30             CPI     30H             ;DELIMITER?
   E22A   4F               MOV     C,A             ;DELIM STORE
   E22B   D8               RC                      ;IF SO, DONE
   E22C   47               MOV     B,A             ;LAST CHAR STORE
   E22D   18               DB      JR
   E22E   F6               DB      GCMN1-$-1
                   ;
                   ; COMMAND
                   ;
   E22F   CD8BE1   VERIF:  CALL    LD3N            ;GET 3 OPERANDS
                   ;
                   ; COMPARES TWO AREAS OF MEMORY. ENTER WITH
                   ; SOURCE IN HL. DESTINATION IN DE & COUNT
                   ; IN BC. ALTERS ALL REGISTERS.
                   ;
   E232   1A       VRFY:   LDAX    D               ;DESTINATION
   E233   ED               DB      CPI0            ;COMPARE TO SOURCE
   E234   A1               DB      CPI1
   E235   C40CE1           CNZ     CRLF            ;IF NOT SAME, CRLF
   E238   2B               DCX     H               ;(CPI INCRMS HL)
   E239   C4DAE1           CNZ     PNHL            ; & PRINT SOURCE ADDR
   E23C   C4E2E1           CNZ     PSNM            ; & SOURCE CONTENTS
   E23F   EB               XCHG
   E240   C4E2E1           CNZ     PSNM            ; & DEST CONTENTS
   E243   EB               XCHG
   E244   23               INX     H               ;RESTORE HL FOR CPI
   E245   13               INX     D               ;NEXT DEST
   E246   E20CE1           JPO     CRLF            ;IF BC = 0, DONE
   E249   18               DB      JR
   E24A   E7               DB      VRFY-$-1
                   ;
                   ; COMMAND
                   ;
   E24B   CD8BE1   MOVE:   CALL    LD3N            ;OPERANDS
   E24E   3E01             MVI     A,1             ;# OF ITERATION
                   ;
                   ; MOVE FROM ONE LOCATION TO ANOTHER. ENTER
                   ; WITH SOURCE ADDR IN HL, DEST IN DE, BYTE
                   ; COUNT IN BC. THE MOVE IS ITERATED N TIMES,
                   ; WHERE N = TWICE THE CONTENTS OF A, LESS ONE.
                   ; INCREMENTS HL & DE BY BC. CHECKS RESULT
                   ; & PRINTS THE ERRORS FOUND.
   E250   37       MVE:    STC                     ;CY IS USED IN ITERATION COUNT
   E251   E5       MVE1:   PUSH    H               ;SOURCE
   E252   D5               PUSH    D               ;DEST
   E253   C5               PUSH    B               ;BYTE COUNT
   E254   F3               DI                      ;FOR PROM PROGRAMMING
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 14
      


   E255   ED               DB      LDIR            ;ONE ITERATION
   E256   B0               DB      LDIR1
   E257   FB               EI
   E258   C1               POP     B
   E259   D1               POP     D
   E25A   E1               POP     H
                   ; ITERATION CALCULATIONS
   E25B   3F               CMC
   E25C   38               DB      JRC
   E25D   F3               DB      MVE1-$-1
   E25E   3D               DCR     A
   E25F   20               DB      JRNZ
   E260   F0               DB      MVE1-$-1
                   ; CHECK RESULT
   E261   18               DB      JR
   E262   CF               DB      VRFY-$-1
                   ;
                   ; COMMAND
                   ;
                   ; GO <CR>     EXECUTION BEGINS AT USER PC.
                   ;
                   ; COMMAND
                   ;
                   ; GO <ADDR1>/<ADDR2> ... >ADDRN>
                   ; EXECUTION BEGINS AT ADDR1 WITH BREAKPOINTS SET
                   ; AT ADDR2,...,ADDRN.
                   ;
   E263   78       GO:     MOV     A,B             ;CHECK THAT THE LAST
   E264   FE6F             CPI     'O'+CASE        ;CMND CHAR IS 'O'
   E266   C2BCE0           JNZ     ERROR
   E269   79               MOV     A,C             ;CMND DELIMITER
   E26A   0E00             MVI     C,0             ;BP FLAG
   E26C   CDD1E1   GO1:    CALL    SKSG            ;WAIT FOR NON-SPACE
   E26F   FE0D             CPI     CR
   E271   28               DB      JRZ
   E272   3A               DB      RETN-$-1        ;RETN IF CR
   E273   FE2F             CPI     '/'             ;BP?
   E275   20               DB      JRNZ
   E276   0E               DB      GO3-$-1
   E277   0E01             MVI     C,1             ;SET BRKPT FLAG
   E279   213000           LXI     H,RSTLC         ;TRANSFER
   E27C   36C3             MVI     M,0C3H          ;'JMP SVMS' TO
   E27E   2143E0           LXI     H,SVMS
   E281   223100           SHLD    RSTLC+1         ;RST LOC
   E284   AF               XRA     A
   E285   CD97E1   GO3:    CALL    GNHL            ;GET ADDR
   E288   CB41             DW      41CBH           ;BIT 0,C: FLAG SET?
   E28A   EB               XCHG
   E28B   28               DB      JRZ
   E28C   18               DB      GO5-$-1         ;JMP IF NO BP
   E28D   DD               DB      IX
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 15
      


   E28E   E5               PUSH    H               ;PUSH IX
   E28F   E1               POP     H
   E290   23               INX     H
   E291   6E               MOV     L,M             ;HL = BPSP
                   ;
   E292   23               INX     H               ;BUMP BPSP
   E293   EB               XCHG                    ;DE=BPSP, HL= BP ADDR
   E294   46               MOV     B,M             ;CONTENTS
   E295   36F7             MVI     M,0C7H+RSTLC    ;RST INSTRUCTION
   E297   EB               XCHG                    ;HL=BPSP
   E298   70               MOV     M,B             ;TO BP STACK
   E299   23               INX     H               ;BUMP BPSP
   E29A   73               MOV     M,E             ;BP ADDR TO STACK
   E29B   23               INX     H
   E29C   72               MOV     M,D
   E29D   23               INX     H
   E29E   3601             MVI     M,01            ;PUNCTUATION (BP SET)
   E2A0   DD               DB      IX
   E2A1   75               MOV     M,L             ;LD (IX+1),L
   E2A2   01               DB      1
   E2A3   18               DB      JR
   E2A4   C7               DB      GO1-$-1
                   ; CHANGE USER PC
   E2A5   DD       GO5:    DB      IX
   E2A6   72               MOV     M,D             ;LD (IX+DUPC),D
   E2A7   00               DB      DUPC
   E2A8   DD               DB      IX
   E2A9   73               MOV     M,E             ;LD (IX+DUPC-1),E
   E2AA   FF               DB      DUPC-1
   E2AB   18               DB      JR
   E2AC   BF               DB      GO1-$-1         ;BACK FOR MORE
                   ;
   E2AD   E1       RETN:   POP     H               ;STRIP CMND ADDR FROM STK
   E2AE   E1               POP     H               ;UHL2
   E2AF   D1               POP     D               ;UDE2
   E2B0   C1               POP     B               ;UBC2
   E2B1   F1               POP     PSW             ;UAF2
   E2B2   D9               DB      EXX
   E2B3   08               DB      EXAF
   E2B4   FD               DB      IY
   E2B5   E1               POP     H               ;POP IY: UIY
   E2B6   DD               DB      IX
   E2B7   E1               POP     H               ;POP IX: UIX
                   ;
   E2B8   F1               POP     PSW             ;UIF
   E2B9   ED               DB      0EDH
   E2BA   47               DB      47H             ;LD I,A: UI
   E2BB   F3               DI
   E2BC   30               DB      JRNC
   E2BD   01               DB      RETN1-$-1
   E2BE   FB               EI
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 16
      


                   ; IFF NOW RESTORED
   E2BF   E1       RETN1:  POP     H               ;UHL
   E2C0   D1               POP     D               ;UDE
   E2C1   C1               POP     B               ;UBC
   E2C2   F1               POP     PSW             ;UAF
   E2C3   E3               XTHL                    ;USP TO HL, UHL TO (SP)
   E2C4   F5               PUSH    PSW
   E2C5   C5               PUSH    B
   E2C6   D5               PUSH    D
   E2C7   010A00           LXI     B,10
   E2CA   EB               XCHG                    ;USP TO DE
   E2CB   1B               DCX     D
   E2CC   210900           LXI     H,9
   E2CF   39               DAD     SP
   E2D0   ED               DB      LDDR            ;TRANSFER UPC THRU UHL, L
   E2D1   B8               DB      LDDR1           ;TO USER STACK
   E2D2   EB               XCHG                    ;IS (USER SP - 1) RAM?
   E2D3   7E               MOV     A,M
   E2D4   34               INR     M
   E2D5   BE               CMP     M               ;DID IT CHANGE?
   E2D6   28               DB      JRZ
   E2D7   03               DB      RETN2-$-1
                   ;
   E2D8   35               DCR     M               ;YES, RESTORE IT.
   E2D9   F9               SPHL                    ;CHABGE TO USER STACK
   E2DA   33               INX     SP              ;CORRECT FOR LDDR EXTRA DCR
                   ;
   E2DB   D1       RETN2:  POP     D               ;OTHERWISE, CONTINUE SYS
   E2DC   C1               POP     B
   E2DD   F1               POP     PSW
   E2DE   E1               POP     H
   E2DF   C9               RET
                   ;
                   ; ENTER WITH HL POINTING TO MEMORY & B CONTAINING
                   ; THE 2-BYTE REG FLAG.
                   ; PRINTS SPACE, CONTENTS OF (HL) & ALSO (HL-1) FOR
                   ; 2-BYTE REGS, GETS SUBSTITUTION VALUE INTO DE,
                   ; WRITES E INTO (HL) OR (HL-1) FOR 2-BYTE REGS.
                   ; RETURNS WITH Z-FLAG RESET IFF A CHANGE IS INDICATED
                   ; (BY A LACK OF '.') FOR A 2-BYTE REG.
                   ; PRESERVES BC,HL.
                   ;
   E2E0   CDE2E1   GSUBV:  CALL    PSNM            ;PRINT (HL)
   E2E3   CB               DB      0CBH            ;BIT 6,B
   E2E4   70               DB      70H             ;2-BYTE REG?
   E2E5   28               DB      JRZ
   E2E6   04               DB      GSBV1-$-1
   E2E7   2B               DCX     H               ;YES, PRINT
   E2E8   CDE5E1           CALL    PNM             ;  LO BYTE
   E2EB   3E2E     GSBV1:  MVI     A,'.'
   E2ED   CD0EE1           CALL    PCHR
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 17
      


   E2F0   CD33E1           CALL    GCHR
   E2F3   FE2E             CPI     '.'             ;SUSTITUTION?
   E2F5   CC0EE1           CZ      PCHR            ;IF NOT, PRINT ANOTHER
   E2F8   28               DB      JRZ
   E2F9   08               DB      GSBV2-$-1
   E2FA   EB               XCHG
   E2FB   CD97E1           CALL    GNHL            ;NEW VALUE
   E2FE   EB               XCHG                    ;TO DE
   E2FF   73               MOV     M,E             ;LOAD MEM
                   ; THE FOLLOWING TEST IS FOR SBSR
   E300   CB               DB      0CBH            ;BIT 6,B
   E301   70               DB      70H             ;2-BYTE REG?
   E302   23       GSBV2:  INX     H
   E303   C9               RET
                   ;
                   ; COMMAND
                   ;
                   ; SM <ADDR>    SUBSTITUTE MEMORY LOCATION.
                   ;
                   ; COMMAND
                   ;
                   ; SR <REGISTER NAME>    SUBSTITUTE USER REGISTER
                   ;
                   ; REGISTER NAMES: P (PC), S (SP),
                   ;                 A, F, B, C, D, E, H, L,
                   ;                 I, T (IFF), X (IX), Y (IY),
                   ;                 A',F',B',C',D',E',H',L'.
                   ;
   E304   78       SUBST:  MOV     A,B             ;LAST CMND CHAR
   E305   FE72             CPI     'R'+CASE        ;SR?
   E307   79               MOV     A,C             ;DELIMITER
   E308   28               DB      JRZ
   E309   0F               DB      SBSR-$-1
                   ;
   E30A   CD97E1   SBSM:   CALL    GNHL            ;HL GETS ADDR
   E30D   0600     SBSM1:  MVI     B,0             ;REG FLAGS
                   ; PRINT CURRENT VALUE, REQUEST NEW VALUE &
                   ; PRINT IT IF GIVEN
   E30F   CDE0E2           CALL    GSUBV
   E312   3E07             MVI     A,7             ;8 ENTRIES PER LINE
   E314   CD58E1           CALL    CKBND
   E317   18               DB      JR
   E318   F4               DB      SBSM1-$-1
                   ;
   E319   CD1AE2   SBSR:   CALL    GCMND           ;DE GETS LETTER - 'A'
   E31C   21E7E3           LXI     H,RGTBL
   E31F   19               DAD     D               ;PNTS TO REG DISPLACEMENT
   E320   42               MOV     B,D             ;D = 0
   E321   CB               DB      0CBH            ;BIT 7,(HL)
   E322   7E               DB      7EH             ;A THRU L?
   E323   28               DB      JRZ
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 18
      


   E324   0C               DB      SBSR1-$-1
   E325   79               MOV     A,C             ;LAST CMND DELIMITER
   E326   FE20             CPI     20H             ;SPACE?
   E328   28               DB      JRZ
   E329   07               DB      SBSR1-$-1
   E32A   FE27             CPI     ''''            ;PRIMED?
   E32C   C2BCE0           JNZ     ERROR
   E32F   060E             MVI     B,DUAF-DUAF2    ;YES
                   ;
   E331   7E       SBSR1:  MOV     A,M             ;DISPLACEMENT & FLAGS
   E332   B7               ORA     A               ;IF 0, ILLEGAL CMND
   E333   CABCE0           JZ      ERROR
   E336   E61F             ANI     1FH             ;STRIP FLAGS OFF
   E338   80               ADD     B               ;ADJUST FOR PRIMES
   E339   5F               MOV     E,A             ;DE GETS DISPL (D=0)
   E33A   46               MOV     B,M             ;SAVE ORIG ENTRY
   E33B   DD               DB      IX
   E33C   E5               PUSH    H               ;PUSH IX
   E33D   E1               POP     H               ;STACK FRAME
   E33E   ED               DB      0EDH            ;SBC HL,DE
   E33F   52               DB      52H             ;PNTS TO USER REG
                   ; PRINT CURRENT VALUE, DE GETS SUBSTITUTION
                   ; VALUE, IF ANY, & (HL) OR (HL-1) GETS E.
                   ; Z-FLAG RESET IFF CHANGE FOR A 2-BYTE REG.
   E340   CDE0E2           CALL    GSUBV
   E343   28               DB      JRZ
   E344   01               DB      SBSR3-$-1
   E345   72               MOV     M,D             ;NO. HI BYTE
   E346   CD52E1   SBSR3:  CALL    SPACE
   E349   18               DB      JR
   E34A   CE               DB      SBSR-$-1
                   ;
   E34B   78       DISPL:  MOV     A,B             ;LAST CMND CHAR
   E34C   FE72             CPI     'R'+CASE        ;DR?
   E34E   79               MOV     A,C             ;CMND DELIMITER
   E34F   CAF5E0           JZ      DSPR
                   ;
                   ; COMMAND
                   ;
                   ; DISPLAY MEMORY.
                   ;
   E352   CD64E1   DSPM:   CALL    L2NCR           ;INTO DE, INCRM TO BC,
                                                   ;DELIMITER TO A
   E355   EB               XCHG                    ;N1 TO HL
   E356   CD5DE1   DSPM1:  CALL    PADR1           ;PRINT ADDR, ':'
   E359   CDE2E1   DSPM2:  CALL    PSNM            ;PRINT CONTENTS OF MEM
   E35C   23               INX     H
   E35D   0B               DCX     B
   E35E   78               MOV     A,B
   E35F   B1               ORA     C               ;DONE?
   E360   CA0CE1           JZ      CRLF
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 19
      


   E363   CD56E1           CALL    CK16B           ;CHECK FOR 16 COUNT
   E366   18               DB      JR
   E367   F1               DB DSPM2-$-1
                   ;
                   ; COMMAND
                   ; READ BINARY INPUT FROM DATA PORT
                   ;
   E368   CD64E1   READB:  CALL    L2NCR           ;GET MEM ADDRS
   E36B   CD41E1   RDB1:   CALL    GBYTE           ;GET INPUT
   E36E   12               STAX    D               ;TO MEM
   E36F   13               INX     D
   E370   0B               DCX     B               ;COUNT
   E371   78               MOV     A,B
   E372   B1               ORA     C               ;BC = 0?
   E373   20               DB      JRNZ
   E374   F6               DB      RDB1-$-1
   E375   C9               RET
                   ;
                   ; COMMAND
                   ; WRITE BINARY OUTPUT TO DATA PORT
                   ;
   E376   CD64E1   WRITB:  CALL    L2NCR           ;GET MEM ADDRS
   E379   DB00     WRTB1:  IN      STAT
   E37B   E680             ANI     TBE
   E37D   28               DB      JRZ
   E37E   FA               DB      WRTB1-$-1
   E37F   1A               LDAX    D
   E380   D301             OUT     DATA
   E382   13               INX     D
   E383   0B               DCX     B
   E384   78               MOV     A,B
   E385   B1               ORA     C
   E386   20               DB      JRNZ
   E387   F1               DB      WRTB1-$-1
   E388   C9               RET
                   ;
                   ; COMMAND
                   ; OUT <DATA-BYTE> <PORT NUMBER>
                   ;
   E389   CD97E1   OUTP:   CALL    GNHL
   E38C   EB               XCHG                    ;E GETS DATA
   E38D   CD97E1           CALL    GNHL            ;GET PORT NUMBER
                   ;
   E390   4D               MOV     C,L             ;TO C
   E391   ED59             DW      59EDH           ;OUT (C),E
   E393   C9               RET
                   ;
   E394   0D       HEAD:   DB      CR
   E395   0D               DB      CR
   E396   43524F4D         DB      'CROMEMCO MON1.0 C.1976'
   E39A   454D434F
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 20
      


   E39E   204D4F4E
   E3A2   312E3020
   E3A6   432E3139
   E3AA   3736    
   E3AC   00               DB      0
                   ;
   E3AD   203F     SQS:    DB      ' ?'
   E3AF   07               DB      BELL
                   ;
   E3B0   0A       LFNN:   DB      LF
   E3B1   7F               DB      7FH             ;NULL
   E3B2   00               DB      0
                   ;
   E3B3   3A       PRMPT:  DB      ':'
   E3B4   00               DB      0
                   ; THE COMMAND TBL MUST IMMEDIATELY FOLLOW
                   ; THE PROMT MESSAGE
   E3B5   BCE0             DW      ERROR           ;A
   E3B7   BCE0             DW      ERROR           ;BANK
   E3B9   BCE0             DW      ERROR           ;C
   E3BB   4BE3             DW      DISPL           ;DISPLAY
   E3BD   BCE0             DW      ERROR           ;ENTER
   E3BF   BCE0             DW      ERROR           ;FILE
   E3C1   63E2             DW      GO
   E3C3   BCE0             DW      ERROR           ;H
   E3C5   BCE0             DW      ERROR           ;INPUT
   E3C7   BCE0             DW      ERROR           ;J
   E3C9   BCE0             DW      ERROR           ;K
   E3CB   BCE0             DW      ERROR           ;LIST
   E3CD   4BE2             DW      MOVE
   E3CF   BCE0             DW      ERROR           ;NUMBER
   E3D1   89E3             DW      OUTP            ;OUTPUT
   E3D3   C9E0             DW      PROG            ;PROGRAM
   E3D5   BCE0             DW      ERROR           ;Q
   E3D7   68E3             DW      READB           ;READ BINARY OR ASCII
   E3D9   04E3             DW      SUBST           ;SUBSTITUTE
   E3DB   BCE0             DW      ERROR           ;TRAP
   E3DD   BCE0             DW      ERROR           ;UNEQUAL
   E3DF   2FE2             DW      VERIF           ;VERIFY
   E3E1   76E3             DW      WRITB           ;WRITE BINARY OR ASCII
   E3E3   BCE0             DW      ERROR           ;X
   E3E5   BCE0             DW      ERROR           ;Y
                   ;
   E3E7   84       RGTBL:  DB      -DUAF+PF        ;A
   E3E8   86               DB      -DUBC+PF        ;B
   E3E9   87               DB      -DUBC+1+PF      ;C
   E3EA   88               DB      -DUDE+PF        ;D
   E3EB   89               DB      -DUDE+1+PF      ;E
   E3EC   85               DB      -DUAF+1+PF      ;F
   E3ED   00               DB      0
   E3EE   8A               DB      -DUHL+PF        ;H
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 21
      


   E3EF   0C               DB      -DUIT           ;I
   E3F0   00               DB      0
   E3F1   00               DB      0
   E3F2   8B               DB      -DUHL+1+PF      ;L
   E3F3   00               DB      0
   E3F4   00               DB      0
   E3F5   00               DB      0
                   ; INTEL MACRO-80 FLAGS A VALUE ERROR, BUT CORRECT VALUE 40 IS COMPUTED
                   ;        DB      -DUPC+R2F       ;PC
   E3F6   40        DB 40H
   E3F7   00               DB      0
   E3F8   00               DB      0
   E3F9   42               DB      -DUSP+R2F       ;SP
   E3FA   0D               DB      -DUIT+1         ;T (INTERRUPT ENABLE)
   E3FB   00               DB      0
   E3FC   00               DB      0
   E3FD   00               DB      0
   E3FE   4E               DB      -DUIX+R2F       ;X (IX)
   E3FF   50               DB      -DUIY+R2F       ;Y (IY)
                    
                           END
 NO PROGRAM ERRORS
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      04:31  11/15/2014
+                                                                                      PAGE 22
      


                        SYMBOL TABLE

  * 01

  A      0007      ABCYZ  E0B5      B      0000      BAUD   E036      
  BELL   0007      C      0001      CASE   0020      CK16B  E156      
  CKBND  E158      CLBP1  E088      CLBP2  E096      CMND   E09C      
  CMND1  E09F      CPI0   00ED      CPI1   00A1      CPIR   00ED *    
  CPIR1  00B1 *    CR     000D      CRLF   E10C      D      0002      
  DATA   0001      DAV    0040      DISPL  E34B      DJNZ   0010      
  DSPM   E352 *    DSPM1  E356 *    DSPM2  E359      DSPR   E0F5      
  DUAF   FFFC      DUAF2  FFEE      DUBC   FFFA      DUBC2  FFEC *    
  DUDE   FFF8      DUDE2  FFEA *    DUHL   FFF6      DUHL2  FFE8      
  DUIT   FFF4      DUIX   FFF2      DUIY   FFF0      DUPC   0000      
  DUSP   FFFE      E      0003      ERROR  E0BC      ESC    001B      
  ESCPE  E0BF      EXAF   0008      EXX    00D9      GBYTE  E141      
  GCHR   E133      GCHR1  E13E      GCMN1  E225      GCMND  E21A      
  GNHL   E197      GNHL1  E198 *    GNHL3  E1A4      GNHL5  E1A7 *    
  GO     E263      GO1    E26C      GO3    E285      GO5    E2A5      
  GSBV1  E2EB      GSBV2  E302      GSUBV  E2E0      H      0004      
  HEAD   E394      HEXSH  E1AF      HXSH0  E1BD      HXSH1  E1C8      
  HXSH4  E1BF *    INIT   E007      INIT1  E022      IX     00DD      
  IY     00FD      JR     0018      JRC    0038      JRNC   0030      
  JRNZ   0020      JRZ    0028      L      0005      L2NCR  E164      
  LD2N   E170      LD2N1  E181      LD2N2  E188      LD3N   E18B      
  LDD    00ED *    LDD1   00A8 *    LDDR   00ED      LDDR1  00B8      
  LDI    00ED *    LDI1   00A0 *    LDIR   00ED      LDIR1  00B0      
  LF     000A      LFNN   E3B0      LINCR  E18E      M      0006      
  MOVE   E24B      MVE    E250      MVE1   E251      OUTP   E389      
  P1HEX  E1FC      P1HX1  E204      P2BMS  E14A      P2HEX  E1F3      
  P4HEX  E1EB      PADDR  E15A *    PADR1  E15D      PCHR   E10E      
  PCHR1  E119      PCHR2  E11D      PF     0080      PMSG   E20C      
  PMSG1  E20F      PNHL   E1DA      PNM    E1E5      PPAGE  00FF      
  PREGS  E107      PRMPT  E3B3      PROG   E0C9      PROG1  E0CB *    
  PROG3  E0E0      PSNM   E1E2      PSQS   E209      PSW    0006      
  R2F    0040      RDB1   E36B      READB  E368      RETN   E2AD      
  RETN1  E2BF      RETN2  E2DB      RGTBL  E3E7      RLD    00ED *    
  RLD1   006F *    RSTLC  0030      SBSM   E30A *    SBSM1  E30D      
  SBSR   E319      SBSR1  E331      SBSR3  E346      SET5A  00CB *    
  SKSG   E1D1      SKSG0  E1D0      SKSG1  E1D2      SKSGC  E167      
  SP     0006      SPACE  E152      SQS    E3AD      ST5A1  00EF *    
  START  E000 *    STAT   0000      SUBST  E304      SVMS   E043      
  SVMS1  E053      SVMS3  E070      TBE    0080      TEMPS  0016      
  VERIF  E22F      VRFY   E232      WRITB  E376      WRTB1  E379      
  
